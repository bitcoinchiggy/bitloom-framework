%% Wallet Design & Roles (Mermaid) â€” GitHub-compatible

flowchart TD
  A["OpsCo (Client)<br/>- Legal owner of BTC<br/>- Holds >=1 signing key"]:::client
  B["Parent-Owned LLC<br/>(Coordinator / XPUB Licensor)"]:::llc
  C1["Senior Technician (Employee)<br/>- Custodial agent<br/>- Signs on instruction<br/>- Reviews logs"]:::employee
  C2["Junior Technician (Employee)<br/>- Custodial agent<br/>- Signs on instruction"]:::employee
  P["Key Management Policy<br/>Backups, Rotation, Logging, Incidents"]:::policy

  A --- B
  B --- C1
  B --- C2
  B --- P

  classDef client fill:#e5f5ff,stroke:#0090ff,stroke-width:1px,color:#002b45;
  classDef llc fill:#f3f0ff,stroke:#6b46ff,stroke-width:1px,color:#1f1452;
  classDef employee fill:#f5fff0,stroke:#50a000,stroke-width:1px,color:#153a00;
  classDef policy fill:#fff6e5,stroke:#ff9900,stroke-width:1px,color:#4a2a00;

%% Multisig design (comments):
%% Recommended: 2-of-3 with keys K1 (OpsCo), K2 (Senior), K3 (Junior).
%% No unilateral control because OpsCo retains a key.
%% Optional: 3-of-5 for higher resilience.

sequenceDiagram
  autonumber
  participant OpsCo as OpsCo (Client)
  participant Manager as Parent-Owned LLC Manager
  participant Senior as Senior Tech (K2)
  participant Junior as Junior Tech (K3)
  participant Network as Bitcoin Network

  OpsCo->>Manager: Submit transfer request (amount, destination)
  Manager->>Manager: Construct PSBT from multisig XPUB set
  Manager->>Senior: Request signature (K2)
  Senior-->>Manager: Return partial signature
  Manager->>Junior: Request signature (K3)
  Junior-->>Manager: Return partial signature
  Manager->>Network: Broadcast fully signed transaction
  Manager-->>OpsCo: Provide txid and log entry
